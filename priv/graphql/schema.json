{
  "data": {
    "__schema": {
      "types": [
        {
          "possibleTypes": null,
          "name": "Boolean",
          "kind": "SCALAR",
          "interfaces": null,
          "inputFields": null,
          "fields": null,
          "enumValues": null,
          "description": "The `Boolean` scalar type represents `true` or `false`."
        },
        {
          "possibleTypes": null,
          "name": "RootQueryType",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "greeting",
              "isDeprecated": null,
              "description": "Greeting",
              "deprecationReason": null,
              "args": [
                {
                  "type": {
                    "ofType": null,
                    "name": "String",
                    "kind": "SCALAR"
                  },
                  "name": "name",
                  "description": "The name of who you'd like to greet.",
                  "defaultValue": null
                }
              ]
            }
          ],
          "enumValues": null,
          "description": ""
        },
        {
          "possibleTypes": null,
          "name": "String",
          "kind": "SCALAR",
          "interfaces": null,
          "inputFields": null,
          "fields": null,
          "enumValues": null,
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
        },
        {
          "possibleTypes": null,
          "name": "__Directive",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": {
                      "name": "__InputValue",
                      "kind": "OBJECT"
                    },
                    "name": null,
                    "kind": "NON_NULL"
                  },
                  "name": null,
                  "kind": "LIST"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "args",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "description",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "String",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "name",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "onField",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "onFragment",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "onOperation",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.  In some cases, you need to provide options to alter GraphQLâ€™s execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor"
        },
        {
          "possibleTypes": null,
          "name": "__EnumValue",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "deprecationReason",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "description",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "isDeprecated",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "String",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "name",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string."
        },
        {
          "possibleTypes": null,
          "name": "__Field",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": {
                      "name": "__InputValue",
                      "kind": "OBJECT"
                    },
                    "name": null,
                    "kind": "NON_NULL"
                  },
                  "name": null,
                  "kind": "LIST"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "args",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "deprecationReason",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "description",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "isDeprecated",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "String",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "name",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "__Type",
                  "kind": "OBJECT"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "type",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type."
        },
        {
          "possibleTypes": null,
          "name": "__InputValue",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "defaultValue",
              "isDeprecated": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "description",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "String",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "name",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "__Type",
                  "kind": "OBJECT"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "type",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value."
        },
        {
          "possibleTypes": null,
          "name": "__Schema",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": {
                      "name": "__Directive",
                      "kind": "OBJECT"
                    },
                    "name": null,
                    "kind": "NON_NULL"
                  },
                  "name": null,
                  "kind": "LIST"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "directives",
              "isDeprecated": null,
              "description": "A list of all directives supported by this server.",
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "__Type",
                "kind": "OBJECT"
              },
              "name": "mutationType",
              "isDeprecated": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "__Type",
                  "kind": "OBJECT"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "queryType",
              "isDeprecated": null,
              "description": "The type that query operations will be rooted at.",
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "__Type",
                "kind": "OBJECT"
              },
              "name": "subscriptionType",
              "isDeprecated": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": {
                      "name": "__Type",
                      "kind": "OBJECT"
                    },
                    "name": null,
                    "kind": "NON_NULL"
                  },
                  "name": null,
                  "kind": "LIST"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "types",
              "isDeprecated": null,
              "description": "A list of all types supported by this server.",
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations."
        },
        {
          "possibleTypes": null,
          "name": "__Type",
          "kind": "OBJECT",
          "interfaces": [],
          "inputFields": null,
          "fields": [
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "description",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": null,
                    "name": "__EnumValue",
                    "kind": "OBJECT"
                  },
                  "name": null,
                  "kind": "NON_NULL"
                },
                "name": null,
                "kind": "LIST"
              },
              "name": "enumValues",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": [
                {
                  "type": {
                    "ofType": null,
                    "name": "Boolean",
                    "kind": "SCALAR"
                  },
                  "name": "includeDeprecated",
                  "description": null,
                  "defaultValue": "false"
                }
              ]
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": null,
                    "name": "__Field",
                    "kind": "OBJECT"
                  },
                  "name": null,
                  "kind": "NON_NULL"
                },
                "name": null,
                "kind": "LIST"
              },
              "name": "fields",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": [
                {
                  "type": {
                    "ofType": null,
                    "name": "Boolean",
                    "kind": "SCALAR"
                  },
                  "name": "includeDeprecated",
                  "description": null,
                  "defaultValue": "false"
                }
              ]
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": null,
                    "name": "__InputValue",
                    "kind": "OBJECT"
                  },
                  "name": null,
                  "kind": "NON_NULL"
                },
                "name": null,
                "kind": "LIST"
              },
              "name": "inputFields",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": null,
                    "name": "__Type",
                    "kind": "OBJECT"
                  },
                  "name": null,
                  "kind": "NON_NULL"
                },
                "name": null,
                "kind": "LIST"
              },
              "name": "interfaces",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "__TypeKind",
                  "kind": "ENUM"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "kind",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "String",
                "kind": "SCALAR"
              },
              "name": "name",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": null,
                "name": "__Type",
                "kind": "OBJECT"
              },
              "name": "ofType",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            },
            {
              "type": {
                "ofType": {
                  "ofType": {
                    "ofType": null,
                    "name": "__Type",
                    "kind": "OBJECT"
                  },
                  "name": null,
                  "kind": "NON_NULL"
                },
                "name": null,
                "kind": "LIST"
              },
              "name": "possibleTypes",
              "isDeprecated": null,
              "description": null,
              "deprecationReason": null,
              "args": []
            }
          ],
          "enumValues": null,
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.  Depending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types."
        },
        {
          "possibleTypes": null,
          "name": "__TypeKind",
          "kind": "ENUM",
          "interfaces": null,
          "inputFields": null,
          "fields": null,
          "enumValues": [
            {
              "name": "ENUM",
              "isDeprecated": null,
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "isDeprecated": null,
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "isDeprecated": null,
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "isDeprecated": null,
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "isDeprecated": null,
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "isDeprecated": null,
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "isDeprecated": null,
              "description": "Indicates this type is a scalar.",
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "isDeprecated": null,
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "deprecationReason": null
            }
          ],
          "description": "An enum describing what kind of type a given `__Type` is."
        }
      ],
      "subscriptionType": null,
      "queryType": {
        "name": "RootQueryType"
      },
      "mutationType": null,
      "directives": [
        {
          "onOperation": false,
          "onFragment": true,
          "onField": true,
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "args": [
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "if",
              "description": "Included when true.",
              "defaultValue": null
            }
          ]
        },
        {
          "onOperation": false,
          "onFragment": true,
          "onField": true,
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "args": [
            {
              "type": {
                "ofType": {
                  "ofType": null,
                  "name": "Boolean",
                  "kind": "SCALAR"
                },
                "name": null,
                "kind": "NON_NULL"
              },
              "name": "if",
              "description": "Skipped when true.",
              "defaultValue": null
            }
          ]
        }
      ]
    }
  }
}